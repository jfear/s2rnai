# sampletable: TSV file defining sample metadata.
#
# First column must have header name "samplename".
# For 4C data:
# - first column must be "samplename"
# - restriction_site: the sequence of the restriction site
# - bait: the name of the bait or locus
# - enzyme: the name of the restriction enzyme
# - primer: the primer sequence, NOT including the restriction site
# - fragLen: the length of "useful" part of the read. This is the read length,
#            minus the primer and minus the restriction site. This is how much
#            sequence will be extracted from around each restriction site.
# - fragLen2: the length of the primer plus the restriction site. This is how
#             many bases will be hard-clipped from the 5' end of each read
#             before mapping.
#
# (fragLen and fragLen2 should add up to the read length)
#
sampletable: 'config/4c_sampletable.tsv'

# sample_dir: directory in which each sample is expected to have its own
# directory and fastq file[s]. If `sampletable` lists a sample with samplename
# SAMPLE1, then at least the file $sample_dir/SAMPLE1/SAMPLE1_R1.fastq.gz is
# expected.
sample_dir: 'data/4c_samples'

# Directory to contain reports and other aggregations
aggregation_dir: 'data/aggregation'

# Which key in the `references` dict below to use
assembly: 'dmel'

# If not specified here, use the environment variable REFERENCES_DIR.
references_dir: 'references_data'

# 4c-specific data directory
4c_dir: 'data/4c'

4c:
  # tag indicating which reference fasta to use when creating the reduced
  # genome
  tag: 'test'

  # Dictionary of baits.
  baits:

    # keys are bait names
    locus1:

      # chromosome and position of the bait sequence. 4c-ker needs this.
      chrom: 'chr2L'
      pos: 1000

      # values of `k` to use for 4c-ker in the "cis" analysis mode and the
      # "nearbait" analysis mode
      cis_k: 10
      nearbait_k: 3

    # same for another locus
    locus2:
      chrom: 'chr2L'
      pos: 3500
      cis_k: 10
      nearbait_k: 3

  # configure the differential 4c interaction comparisons
  comparisons:

    # label for the comparison
    wt-vs-mutant-locus1:

      # must match one of the baits above
      bait: locus_1

      # samples to use for control. Must be values in the sampletable's
      # "samplename" column.
      control:
        - wt_locus1_1
        - wt_locus_1_2
      # samples to use for treatment
      treatment:
        - mutant_locus1_1
        - mutant_locus1_2

    # comparison for another locus
    wt-vs-mutant-locus2:
      bait: locus_2
      control:
        - wt_locus2_1
        - wt_locus_2_2
      treatment:
        - mutant_locus2_1
        - mutant_locus2_2


# Configuration for the track hub
trackhub:
  hub:
    hub_name: 'my-4c-hub'
    short_label: '4C track hub'
    long_label: '4C track hub'
    genome: 'dm6'
    email: 'dalerr@niddk.nih.gov'

  upload:
    remote_fn: '/www/4c/hub.txt'
    host: 'example.com'
    user: 'username'

  # If a filename matches the regex, then use that color. First one wins.
  colors:
    - wt: "#444444"
    - mutant: "#007acc"


# references has the structure:
#
#   assembly:           [ used as top-level dir for references ]
#     tag:              [ user-defined; often indicates version or release ]
#       type:           [ must be either "gtf" or "fasta" ]
#         url:          [ string or list of urls ]
#         postprocess:  [ string of importable function or dict of function and args ]
#         conversions:  [ list of gtf conversions; only if type == gtf ]
#         indexes:      [ list of indexes to build; only if type == fasta ]

references:
  dmel:
    test:
      fasta:
        url: "https://raw.githubusercontent.com/lcdb/lcdb-test-data/add-chipseq/data/seq/dm6.small.fa"
        postprocess: 'lib.common.gzipped'
